-- phpMyAdmin SQL Dump
-- version 4.7.1
-- https://www.phpmyadmin.net/
--
-- Host: localhost
-- Generation Time: May 03, 2018 at 09:07 AM
-- Server version: 5.5.56-MariaDB
-- PHP Version: 7.1.11

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `iste240_palts`
--

-- --------------------------------------------------------

--
-- Table structure for table `Comments`
--

CREATE TABLE `Comments` (
  `ID` int(11) NOT NULL,
  `Name` varchar(30) NOT NULL,
  `Comment` varchar(300) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `Comments`
--

INSERT INTO `Comments` (`ID`, `Name`, `Comment`) VALUES
(1, 'Test', 'Hi this is a test.'),
(2, 'Test 2', 'Testing 2'),
(25, 'Justin', 'Testing 3'),
(26, 'Test', 'a'),
(27, 'Esteban', 'I WAS HERE AND I SAY THIS SITE SUCKS!!!!');

-- --------------------------------------------------------

--
-- Table structure for table `Pages`
--

CREATE TABLE `Pages` (
  `PageName` varchar(30) NOT NULL,
  `PageParent` varchar(30) NOT NULL,
  `Content` text NOT NULL,
  `PrevPage` varchar(30) DEFAULT NULL,
  `NextPage` varchar(30) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `Pages`
--

INSERT INTO `Pages` (`PageName`, `PageParent`, `Content`, `PrevPage`, `NextPage`) VALUES
('cat', 'Files', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/aSIY8MK.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/yi8PBC8.png\">\r\n	<img src=\"https://i.imgur.com/mGsCt65.png\" alt=\"An example of the ls command being ran.\">\r\n</picture>\r\n<p>Cat stands for concatenate, and is one of the most used commands in UNIX. It is very simple, and its function is to print out the entirety of a file. In fact, usually it requires no arguments. The commands is structured as follows: \'cat filename.txt\'. There is one useful command you can use with cat:</p>\r\n<pre class=\"preBox\">cat -n</pre>\r\n<p class=\"preText\">This numbers the lines of output for the cat command, meaning that each line will start with its line number, followed by the content of the file.</p>', 'less', 'files_quiz'),
('cd', 'The Command Line', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/ejW3qYF.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/STsaNE2.png\">\r\n	<img src=\"https://i.imgur.com/VOTbVS7.png\" alt=\"An example of the cd command.\">\r\n</picture>\r\n<p>\r\n	This is a very simple command, and does not require much explanation.\r\n	 It stands for \"change directory\", and is used to move about the file system in bash.\r\n	 It does not have any arguments, and has no man page, since it has a very simple purpose.\r\n	 The structure of the command is \'cd /folder/to/navigate/to/\'.\r\n	 Note that this command only accepts folder paths, as you can only change into directories.\r\n	 There are certain ways to shorten and abbreviate paths, described below:\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ cd ~</pre>\r\n<p class=\"preText\">\r\n	Refers to the users home folder.\r\n	 This means that the command \'cd ~/folder\' brings the user to the folder named \'folder\' in their home directory.\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ cd ..</pre>\r\n<p class=\"preText\">\r\n	Refers to the parent folder of the current location.\r\n	 This can be used to refer to files outside of the folder you are in.\r\n	</p>\r\n<p>\r\n	Note that it is also possible to navigate without using \'absolute\', or full, path names.\r\n	 If you are located in your home directory, and type \'cd folder\', it will intelligently deduce that you want to navigate to the folder below where you currently are.\r\n</p>', 'rm', 'man'),
('chmod', 'Permissions', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/1myja9X.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/s3hhXpb.png\">\r\n	<img src=\"https://i.imgur.com/oC2z3N8.png\" alt=\"An example of the chmod command being ran.\">\r\n</picture>\r\n<p>Chmod is the command to change permissions of a file. The command has very few options, and is simple to master. The structure of the command is:</p>\r\n<pre class=\"preBox\">chmod [permission settings] [file/folder name]</pre>\r\n<p>Permission settings can be defined in two ways: either through octal numbers if you want to change all permission groups, or through the alphabet for increased readability.</p>\r\n<p>These are the settings for octal numbers changing permissions for \'file.txt\':</p>\r\n<pre class=\"preBox\">chmod 775 file.txt</pre>\r\n<p class=\"preText\">This would give the user and the group read, write and execute access, while all other users trying to access the file would have read and execute access only.</p>\r\n<p>This is the command for defining them alphabetically:</p>\r\n<pre class=\"preBox\">chmod u+rwx file.txt<br>chmod u-x file.txt</pre>\r\n<p class=\"preText\">The first command would change the user\'s permissions to octal 7 (read, write and execute). The second command would only remove execute permissions from the user.</p>\r\n<p>One useful option for this command is:</p>\r\n<pre class=\"preBox\">-R</pre>\r\n<p>This option recursively applies the permission settings defined to all children of a parent directory. It does nothing when applied to a single file.</p>\r\n', 'file_permissions', 'chown'),
('chown', 'Permissions', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/JT3QRq0.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/AMXohrG.png\">\r\n	<img src=\"https://i.imgur.com/nojRHo9.png\" alt=\"An example of the chown command being ran.\">\r\n</picture>\r\n<p>chown is the command used to change the user or group of a file. This could be useful if a file is moved and needs to have its permissions changed to match the other settings in its new location.</p>\r\n<p>The command structure is as follows:</p>\r\n<pre class=\"preBox\">chown [user]:[group] [file/folder name]</pre>\r\n<p>There are two ways you can use the command (in this example, we will be modifying file.txt):</p>\r\n<pre class=\"preBox\">chown user file.txt</pre>\r\n<p class=\"preText\">This changes the user of file.txt to \'user\'.</p>\r\n<pre class=\"preBox\">chown user:group file.txt</pre>\r\n<p class=\"preText\">This changes the user of file.txt to \'user\', and the group of file.txt to \'group\'.</p>', 'chmod', 'group_del_add'),
('df', 'System Information', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/P6PembJ.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/By1N6lG.png\">\r\n	<img src=\"https://i.imgur.com/LrWLbw8.png\" alt=\"An example of the df command being ran.\">\r\n</picture>\r\n<p>\r\n	The df command stands for disk filesystem.\r\n	This command is pretty similar to du command.\r\n	 It is used to get a detailed summary of available and used disk space of a file system.\r\n</p>\r\n<p>\r\n	There are also some useful arguments that can be used with df to make more sense of the results.\r\n	 The most useful are:\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ df -h</pre>\r\n<p class=\"preText\">\r\n	This command will have the data size in human readable form.\r\n	 The user will be able to see the size of the data in Bytes, Kilobytes, Megabytes, etc.\r\n	 It makes it easier for users to comprehend the size of data.\r\n	 \r\n</p>\r\n<pre class=\"preBox\">user@hostname$ df -a</pre>\r\n<p class=\"preText\">\r\n	This df command displays all file systems including dummy file systems.\r\n	It displays their disk usage and memory utilization.\r\n</p>\r\n\r\n<pre class=\"preBox\">user@hostname$ df -T</pre>\r\n<p class=\"preText\">\r\n	This command df command is used to check the type of each file system.\r\n	It is a useful command to execute if you are searching for a certain file type.\r\n</p>', 'ping', 'ifconfig'),
('du', 'System Information', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/v5Xbjj6.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/bT29xFy.png\">\r\n	<img src=\"https://i.imgur.com/TVkwbSt.png\" alt=\"An example of the du command being ran.\">\r\n</picture>\r\n<p>\r\n	du command is an UNIX command used to find information about disk usage of directories and files.\r\n	 This command displays the sizes of files and directories recursively.\r\n</p>\r\n<p>\r\n	There are also some useful arguments that can be used with du to make more sense of the results.\r\n	 The most useful are:\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ du -h</pre>\r\n<p class=\"preText\">\r\n	This command will have the data size in human readable form.\r\n	 The user will be able to see the size of the data in Bytes, Kilobytes, Megabytes, etc.\r\n	 It makes it easier for users to comprehend the size of data.\r\n	 \r\n</p>\r\n<pre class=\"preBox\">user@hostname$ du -s</pre>\r\n<p class=\"preText\">\r\n	This will give the user a total usage of the disk in a directory.\r\n	This command is used when the user wants to know the disk usage of a certain directory.\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ du -ah</pre>\r\n<p class=\"preText\">\r\n	This command displays disk usage of all files and directories in human readable format.\r\n	It will be easier for user to understand as the data size will be in terms of Bytes.\r\n</p>', 'w', 'ping'),
('files_introduction', 'Files', '<p>\r\n	One of the most useful sets of skills that are enhanced by UNIX command line is file manipulation and inspection. There are so many ways to get a glimpse into files without opening them like you would have to in a GUI, making it a breeze to find things you are looking for without wasting the time of opening a file in a word processing program (or even Notepad). In this section, we will cover some of these commands.\r\n</p>', NULL, 'head'),
('file_permissions', 'Permissions', '<p>Each file and folder in Linux has an owner (who can never lose access to the file) and a group (who has defined access to the directory).</p>\r\n\r\n<p>As a result, each file/folder has three options for permissions: user, group, and other. The permissions can be custom defined for each group to allow different groups of people different levels of access.</p>\r\n\r\n<p>Each permission group has three options to set: read, write, and execute. They are defined by octal numbers, meaning that read is 4, write is 2, and execute is 1, and 0 is no access. These numbers can be added to provide more access.</p>\r\n\r\n<p>With all this information, you are ready to learn how to modify permissions on files and folders in Linux!</p>', 'permissions_introduction', 'chmod'),
('find', 'Files', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/mcQSRNJ.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/gvCY9JW.png\">\r\n	<img src=\"https://i.imgur.com/8NUbsRg.png\" alt=\"An example of the find command being ran.\">\r\n</picture>\r\n<p>The find command in UNIX is a good utility to find out about a file hierarchy. It can be used to find files and directories and also do any desired operations on them. It supports searching by file, folder, name, date of creation and modification, permissions, etc. These are some of the useful find commands:</p>\r\n<pre class=\"preBox\">find -name</pre>\r\n<p class=\"preText\">This will find the name of the file mentioned after the name flag. It only finds file in the current working directory.</p>\r\n<pre class=\"preBox\">find -iname</pre>\r\n<p class=\"preText\">This will find the name of the file mentioned after the iname flag. It will consider files that contain both capital and small letters.</p>\r\n<pre class=\"preBox\">find -type f</pre>\r\n<p class=\"preText\">This command searches for the type of file mentioned by the user.</p>\r\n<pre class=\"preBox\">find -type d</pre>\r\n<p class=\"preText\">This command searches for the directory mentioned by the user.</p>', 'grep', 'more'),
('free', 'System Information', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/FgyPbN8.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/4S9zPvM.png\">\r\n	<img src=\"https://i.imgur.com/Fv86rdM.png\" alt=\"An example of the free command being ran.\">\r\n</picture>\r\n<p>\r\n	The free command provides information about utilized and unnutilized memory space.\r\n	This command also gives information about swap space which is a part of hard disk drive that simulates additional main memory.\r\n	 \r\n</p>\r\n<p>\r\n	There are also some useful arguments that can be used with free to make more sense of the results.\r\n	 The most useful are:\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ free -t</pre>\r\n<p class=\"preText\">\r\n	This free command will give out an additional line with total physical memory and swap space.\r\n	 It gives a good summary of total memory and swap space used.\r\n	 	 \r\n</p>\r\n<pre class=\"preBox\">user@hostname$ free -s 5</pre>\r\n<p class=\"preText\">\r\n	This command followed by integer 5 will keep giving updated output every 5 seconds.\r\n	This keeps the user updated frequently.\r\n</p>\r\n\r\n<pre class=\"preBox\">user@hostname$ free -m</pre>\r\n<p class=\"preText\">\r\n	This free command will show all data size in megabytes.\r\n	You can use the -g flag, if you want the data size in gigabytes.\r\n</p>', 'ifconfig', 'system_quiz'),
('ftp', 'Network Services', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/IrRMP0h.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/Gi5Cpy0.png\">\r\n	<img src=\"https://i.imgur.com/PzMw1GO.png\" alt=\"An example of the ftp command being ran.\">\r\n</picture>\r\n<p>\r\n	The ftp command in UNIX is used to transfer files to and from a remote host.\r\n	This command is predominantly used for the purpose of file transfer.\r\n	UNIX has built in command line prompts to make a proper FTP connection.\r\n	 \r\n</p>\r\n<p>\r\n	There are also some useful arguments that can be used with ftp to make more sense of the results.\r\n	 The most useful are:\r\n</p>\r\n<pre class=\"preBox\"> user@hostname$ ftp -4 </pre>\r\n<p class=\"preText\">\r\n	This command will use only IPv4 to contact the host.\r\n	 This can be used to check if IPv4 is up.\r\n	\r\n</p>\r\n<pre class=\"preBox\"> user@hostname$ ftp -6  </pre>\r\n<p class=\"preText\">\r\n	This command will use only IPv6 to contact the host.\r\n	 This can be used to check if IPv6 is up.\r\n</p>\r\n\r\n<pre class=\"preBox\"> user@hostname$ ftp -p </pre>\r\n<p class=\"preText\">\r\n	This ftp command uses passive mode for tansfer of data.\r\n	It allows the transferring of files where firewall is present.\r\n	\r\n</p>', 'wget', 'netstat'),
('grep', 'Files', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/5rmTPgD.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/cwIKRlE.png\">\r\n	<img src=\"https://i.imgur.com/jXxAfZu.png\" alt=\"An example of the ls command being ran.\">\r\n</picture>\r\n<p>grep is a very useful command for searching for a particular string in a large file. If you have a file that is hundreds of lines long but you only need to find one line, what grep is one of the tools you can use to do that. If you know the phrase you want to look up, the command is simple. This command is often used in conjunction with the cat command, as follows:</p>\r\n<pre class=\"preBox\">cat file.txt | grep test</pre>\r\n<p class=\"preText\">This command will find all lines in the output of the cat command (file.txt) that match what comes after grep and display them in the terminal. NOTE: It will not tell you on which number line in the file it is on.</p>', 'tail', 'find'),
('group_del_add', 'Permissions', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/okjn5Hy.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/9xGQOfy.png\">\r\n	<img src=\"https://i.imgur.com/xodIx4L.png\" alt=\"An example of the groupdel command being ran.\">\r\n</picture>\r\n<p>Groupdel and groupadd are simple commands used to add and remove groups from the /etc/group file. These groups can be used to control access to certain folders, as defined in the introduction.</p>\r\n<p>The command structure is as follows:</p>\r\n<pre class=\"preBox\">groupadd students<br>groupdel students</pre>\r\n<p class=\"preText\">The first command adds a group called students to the system, and the second command removes a group called students from the system.</p>', 'chown', 'user_del_add'),
('head', 'Files', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/76Z0W3C.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/VsEIrT4.png\">\r\n	<img src=\"https://i.imgur.com/5jCqVHz.png\" alt=\"An example of the head command being ran.\">\r\n</picture>\r\n<p>\r\n	By default, the head command prints out the first 10 lines of a file. This can be useful if you just want to see the title and starting content of a file, but don\'t really need to see the rest of the file to know what it contains. Since the command is such a simple yet powerful one, there are not that many arguments that can be used. The one useful argument is:\r\n</p>\r\n<pre class=\"preBox\">head -n [number_of_lines]</pre>\r\n<p class=\"preText\">This changes the number of lines at the top the command should print. For example, in a file with 7 lines \'head -n 2\' will print the first 2 lines of the file.</p>', 'files_introduction', 'tail'),
('ifconfig', 'System Information', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/jVtaP0l.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/ghBEB40.png\">\r\n	<img src=\"https://i.imgur.com/CHutVkA.png\" alt=\"An example of the ifconfig command being ran.\">\r\n</picture>\r\n<p>\r\n	ifconfig command stands for interface configuration.\r\n	This command is useful in viewing and making changes to the configuration of network interfaces..\r\n	 \r\n</p>\r\n<p>\r\n	There are also some useful arguments that can be used with ifconfig to make more sense of the results.\r\n	 The most useful are:\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ ifconfig -a</pre>\r\n<p class=\"preText\">\r\n	This ifconfig command will give the user an output of all network interfaces on the system.\r\n	 It includes all the inactive network interfaces as well.\r\n	 	 \r\n</p>\r\n<pre class=\"preBox\">user@hostname$ sudo ifconfig eth1 up</pre>\r\n<p class=\"preText\">\r\n	This command will activate the eth1 network interface.\r\n	It will activate eth1 if it is inactive in the first place.\r\n</p>\r\n\r\n<pre class=\"preBox\">user@hostname$ sudo ifconfig eth0 down</pre>\r\n<p class=\"preText\">\r\n	This command will activate the eth0 network interface.\r\n	It will deactivate eth0 if it is active in the first place.\r\n</p>', 'df', 'free'),
('iptables', 'Network Services', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/sb3mcau.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/RxMoRTG.png\">\r\n	<img src=\"https://i.imgur.com/ykg0gzS.png\" alt=\"An example of the iptables command being ran.\">\r\n</picture>\r\n<p>\r\n	The iptables command is used to setup and examine the tables of IP packet filter rules in UNIX.\r\n	More than one table can be defined.\r\n	Each table has a built in chain and can also be user-defined.\r\n	 \r\n</p>\r\n<p>\r\n	There are also some useful arguments that can be used with iptables to make more sense of the results.\r\n	 The most useful are:\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ iptables -v </pre>\r\n<p class=\"preText\">\r\n	This iptables command will give out a verbose output.\r\n	 It gives out the interface name and TOS masks .\r\n	 The packet and byte counters are listed as well.\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ iptables -n  </pre>\r\n<p class=\"preText\">\r\n	This iptables command gives out a numeric output.\r\n	Port numbers and IP addresses wll be printed in numeric format.\r\n</p>\r\n\r\n<pre class=\"preBox\">user@hostname$ iptables -x </pre>\r\n<p class=\"preText\">\r\n	This iptables command will display the value of byte and packet counters without any approximation.\r\n	\r\n</p>', 'netstat', 'nfs'),
('less', 'Files', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/dokPylo.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/oHX710O.png\">\r\n	<img src=\"https://i.imgur.com/0cFnNrA.png\" alt=\"An example of the ls command being ran.\">\r\n</picture>\r\n<p>Less is similar to more in most of its functionality. However, its main difference is that with less, you can scroll both backwards and forwards in a file. This relieves a lot of the frustration if you accidentally scroll too far when using more, or just need to go back while you are using more. It also offers speed advantages, as the way less is designed means that it does not have to read the whole file before starting to display your output. The syntax is the same as more for the most part, as shown below:</p>\r\n<pre class=\"preBox\">cat file.txt | less</pre>\r\n<p class=\"preText\">This will show the file in less mode, allowing you to scroll both ways through the file instead of just forward.</p>', 'locate', 'cat'),
('locate', 'Files', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/yUG75hu.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/RqLusDH.png\">\r\n	<img src=\"https://i.imgur.com/JqXlKea.png\" alt=\"An example of the locate command being ran.\">\r\n</picture>\r\n<p>Searching files can seem much more difficult on the command line until you find this one. Locate will search a directory and its subdirectories for files matching a name pattern. This makes it a breeze to search for files that you may be looking for. The structure of the command is as follows:</p>\r\n<pre class=\"preBox\">[path] [filename]</pre>\r\n<p>For example, to search your home directory for a file named file.txt, the command would be \'locate ~ file.txt\'. You could even just type \'file\' and it would find the desired file. Some useful arguments to use with this command are:</p>\r\n<pre class=\"preBox\">locate -c [filename]</pre>\r\n<p class=\"preText\">This prints the number of files returned by this command instead of their names.</p>\r\n<pre class=\"preBox\">locate -w [filename]</pre>\r\n<p class=\"preText\">This dictates that the name entered must be the full name of any files returned.</p>', 'tar', 'less'),
('ls', 'The Command Line', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/w0e5aRG.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/OfecbX7.png\">\r\n	<img src=\"https://i.imgur.com/cjNMOyq.png\" alt=\"An example of the ls command being ran.\">\r\n</picture>\r\n<p>\r\n	This command is used when you want to browse the file structure of your system.\r\n	 If you open a Terminal window and type ls, it will show you the files in your home directory.\r\n	 This is because by default, terminal windows start in your home directory.\r\n	 You can use pwd to see what the ls will return.\r\n</p>\r\n<p>\r\n	There are also some useful arguments that can be used with ls to make more sense of the results.\r\n	 The most useful are:\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ ls -h</pre>\r\n<p class=\"preText\">\r\n	Makes the file sizes human readable.\r\n	 By default, they are displayed in bytes, and even a picture is a lot of bytes.\r\n	 If you use -h, it will display in KB or MB, and the number will be much more intelligible.\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ ls -l</pre>\r\n<p class=\"preText\">\r\n	Displays a long listing of the directory.\r\n	 This list will be vertical instead of horizontal, and will include the file permissions, the date modified, the size of the file, and the file name.\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ ls -a</pre>\r\n<p class=\"preText\">\r\n	Displays all the files in a directory.\r\n	 By default, UNIX command line hides any file beginning with a period.\r\n	 By specifying -a, the ls command will display these files in the list.\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ ls -R</pre>\r\n<p class=\"preText\">\r\n	Goes through the directory hierarchy recursively.\r\n	 If there are folders below the one you called ls on, the -R argument will list those folders as well.\r\n</p>', 'tcl_introduction', 'pwd'),
('man', 'The Command Line', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/s9X67UG.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/B0WcixR.png\">\r\n	<img src=\"https://i.imgur.com/QQdUkwM.png\" alt=\"An example of the man command being ran.\">\r\n</picture>\r\n<p>\r\n	This command is used to get the manual on how to use a command.\r\n	 If you add \'man\' before any UNIX command, it will give you the \'manpage\' for the command.\r\n	 This will display basic information about the command, as well as a list of its arguments and what they do.\r\n	 You can scroll up and down line by line using the arrow keys, or you can scroll down by multiple lines using the spacebar.\r\n	 Man can be used in conjunction with this tool; while this tool only provides the essential information, you can do a deep dive on any of the commands discussed here by using man.\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ man &lt;command&gt;</pre>\r\n<p>\r\n	To use this command you simply type man and the command you want to see the manual page for.\r\n</p>', 'cd', 'mkdir'),
('mkdir', 'The Command Line', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/Dqg6At8.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/6U6U9xz.png\">\r\n	<img src=\"https://i.imgur.com/ubSgJmb.png\" alt=\"An example of the mkdir command being ran.\">\r\n</picture>\r\n<p>\r\n	This command is used to make directories.\r\n	 Directories are similar to physical folders, in that they can contain other folders and files.\r\n	 This command has a few arguments that make it more useful:\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ mkdir -p</pre>\r\n<p class=\"preText\">\r\n	Creates parent directories if they do not exist.\r\n	 If the command \'mkdir -p folder/inside\' is executed, assuming the folder is empty, this command will create both the \'folder\' and \'inside\' directories.\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ mkdir -m</pre>\r\n<p class=\"preText\">\r\n	Allows the user to define custom permissions on the folder being created.\r\n	 This is useful for combining two commands into one.\r\n	 Now, the user does not have to change the permissions of the folder after creation.\r\n	 An example of a way this flag could be used is \'mkdir -m 777 /folder/inside\'.\r\n</p>', 'man', 'rmdir'),
('more', 'Files', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/E4EVPiI.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/K3XAgp1.png\">\r\n	<img src=\"https://i.imgur.com/rpxh0Rm.png\" alt=\"An example of the more command being ran.\">\r\n</picture>\r\n<p>Often, \'cat\'ing a file presents challenges. In files that are a few hundred lines long, the file scrolls by so quickly that you can miss half the content! This is where more comes in. More will only fill the screen with as much content as it can fit, after which it will wait for user intervention to continue displaying the file. Pressing enter will advance the file one line, and pressing spacebar will move the last line to the first line and display new content below it. If you find what you are looking for before you get to the end of the file, you can simply press \'q\' to stop advancing through the file and return to entering commands.</p>\r\n<pre class=\"preBox\">cat file.txt | more</pre>\r\n<p class=\"preText\">This prints the file and runs it through the more command, which will make it scrollable with your keyboard as described above.</p>', 'find', 'zip'),
('netservices_introduction', 'Network Services', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/oXTrCcS.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/20445Wi.png\">\r\n	<img src=\"https://i.imgur.com/qVpyShk.png\" alt=\"A blank terminal window.\">\r\n</picture>\r\n<p>\r\n	 Commands that come under the Network Services usually help the user in dealing with files and directories across the network server.\r\n	 These commands are really useful in operating files and directories across a network.\r\n	 You will find these commands really useful if you want to access a remote server and manipulate files in it.\r\n	 In this module, you are going to learn different UNIX commands to find out about System Network Services in general.\r\n </p>', NULL, 'scp'),
('netstat', 'Network Services', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/aQFt1hV.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/z4qddU3.png\">\r\n	<img src=\"https://i.imgur.com/EmhK1Nc.png\" alt=\"An example of the netstat command being ran.\">\r\n</picture>\r\n<p>\r\n	The netstat command displays information related to network such as network connections, routing tables, etc.\r\n	It gives the user an overall view of what\'s happening in the network.\r\n	This command is an useful tool for system administrators.\r\n	 \r\n</p>\r\n<p>\r\n	There are also some useful arguments that can be used with netstat to make more sense of the results.\r\n	 The most useful are:\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ netstat -a </pre>\r\n<p class=\"preText\">\r\n	This netstat command will list out all the ports irrespective of it\'s state..\r\n	 It lists out both listening and non listening ports.\r\n	 \r\n</p>\r\n<pre class=\"preBox\">user@hostname$ netstat -at </pre>\r\n<p class=\"preText\">\r\n	This netstat command will list out all the tcp ports.\r\n	 It lists out both listening and non listening ports.\r\n	 \r\n</p>\r\n\r\n<pre class=\"preBox\">user@hostname$ netstat -au </pre>\r\n<p class=\"preText\">\r\n	This netstat command will list out all the udp ports.\r\n	 It lists out both listening and non listening ports.\r\n	 \r\n</p>\r\n\r\n<pre class=\"preBox\">user@hostname$ netstat -l </pre>\r\n<p class=\"preText\">\r\n	This netstat command will list out only the listening ports.\r\n	 It can be used when non listening ports aren\'t of any importance to the user.\r\n	 \r\n</p>\r\n\r\n<pre class=\"preBox\">user@hostname$ netstat -s </pre>\r\n<p class=\"preText\">\r\n	This netstat command shows statistics for all ports.\r\n	 It is a good tool to get the overall summary.\r\n	 \r\n</p>', 'ftp', 'iptables'),
('nfs', 'Network Services', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/9TTHj9G.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/Ktqqs5a.png\">\r\n	<img src=\"https://i.imgur.com/OIgcDJb.png\" alt=\"An example of the nfs command being ran.\">\r\n</picture>\r\n<p>\r\n	nfs allows the user to mount everything or just some portions of a file system.\r\n	It uses remote procedure calls for requests between server and client.\r\n	\r\n	 \r\n</p>\r\n<p>\r\n	There are also some useful arguments that can be used with nfs to make more sense of the results.\r\n	 The most useful are:\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ mount -t nfs 192.168.0.100:/nfsshare /mnt/nfsshare</pre>\r\n<p class=\"preText\">\r\n	This command will mount the directory in the user\'s server for local access.\r\n	 This is one of the most important command on a nfs client.\r\n	 \r\n</p>\r\n<pre class=\"preBox\">user@hostname$ umount /mmt/nfssharing</pre>\r\n<p class=\"preText\">\r\n	This command will unmount the directory /mmt/nfssharing.\r\n	 You can execute this command once you are done with file sharing.\r\n	 \r\n</p>\r\n\r\n<pre class=\"preBox\">user@hostname$ showmount -d </pre>\r\n<p class=\"preText\">\r\n	This command will list all the subdirectories.\r\n	 It can be used to get an idea of the file structure.\r\n	 \r\n</p>\r\n\r\n<pre class=\"preBox\">user@hostname$ showmount -e </pre>\r\n<p class=\"preText\">\r\n	This command will list out every available share on your system.\r\n	 It is a good command to understand the available space in your system.\r\n	 \r\n</p>', 'iptables', 'samba'),
('permissions_introduction', 'Permissions', '<p>Dealing with permissions is much easier on Linux than it is on Windows. The commands are simple, easy to remember, and make sense in each of their respective contexts. It is very easy to control who owns a file or folder, and who can have access to it. Once you get the hang of it, there are many practical applications to setting the correct permissions on Linux files and folders.</p>', NULL, 'file_permissions'),
('ping', 'System Information', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/0outqhG.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/M7r9VUb.png\">\r\n	<img src=\"https://i.imgur.com/0S9fMWR.png\" alt=\"An example of the ping command being ran.\">\r\n</picture>\r\n<p>\r\n	The function of a ping command is to send ICMP ECHO_REQUEST packets to host and reports the response from server.\r\n	 It is useful in testing if a remote server is available and checking network related issues.\r\n</p>\r\n<p>\r\n	There are also some useful arguments that can be used with ping to make more sense of the results.\r\n	 The most useful are:\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ ping -c [number of packets] [ip_address]</pre>\r\n<p class=\"preText\">\r\n	This command will limit the number of packets sent to the network host.\r\n	 It will cause the ping to exit after sending the specified number of packets.\r\n	 It makes it easier for users to comprehend the size of data.\r\n	 \r\n</p>\r\n<pre class=\"preBox\">user@hostname$ ping -D [ip_address]</pre>\r\n<p class=\"preText\">\r\n	This ping command will have an added UNIX timestamp at the start of each line.\r\n	This is useful when to check and document the time when the network tests were completed.\r\n</p>\r\n\r\n<pre class=\"preBox\">user@hostname$ ping -4 [ipv4_address]</pre>\r\n<p class=\"preText\">\r\n	This command is used to ensure that the IPv4 protocol is used.\r\n</p>\r\n\r\n<pre class=\"preBox\">user@hostname$ ping -6 [ipv6_address]</pre>\r\n<p class=\"preText\">\r\n	This command is used to ensure that the IPv6 protocol is used.\r\n</p>', 'du', 'df'),
('pwd', 'The Command Line', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/sy4fM61.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/O48tV9O.png\">\r\n	<img src=\"https://i.imgur.com/QGCDtyw.png\" alt=\"An example of the pwd command being ran.\">\r\n</picture>\r\n<p>\r\n	This command is used to figure out what folder you are currently located in.\r\n	 Typing \'pwd\' into a command line will give you the path to this folder.\r\n	 This is useful when you are trying to navigate through directories, and for knowing that you are in the right directory before executing a particular command.\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ pwd</pre>\r\n<p class=\"preText\">\r\n	This is a simple command without much options.\r\n	 Simply enter pwd into the terminal and get the workding directory path.\r\n</p>', 'ls', 'rm'),
('rm', 'The Command Line', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/qsx2eyP.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/lDBEKQl.png\">\r\n	<img src=\"https://i.imgur.com/U8p76eO.png\" alt=\"An example of the rm command being ran.\">\r\n</picture>\r\n<p>\r\n	This is the command used to remove files.\r\n	 You might think that removing files is trivial, but rm is a very powerful tool that has a number of useful options to make sure that you end up deleting the files that you want to delete.\r\n</p>\r\n<p>\r\n	The standard command is written something like the following: \'rm filename.ext\'.\r\n	 However, a few of the following options can be used in certain cases:\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ rm -f</pre>\r\n<p class=\"preText\">\r\n	This argument is used to force the file to delete, ignoring errors such as the existence of the file.\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ rm -i</pre>\r\n<p class=\"preText\">\r\n	This will prompt the user to confirm before removing the file.\r\n	 This could be useful when working with sensitive information, so that a user could not delete important data without confirming.\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ rm -r</pre>\r\n<p class=\"preText\">\r\n	This stands for recursive, and will remove the subfolders and files of a parent folder.\r\n	 This argument is commonly used with the f argument, so that parent folders along with their contents can be removed with little intervention on the part of the user.\r\n</p>', 'pwd', 'cd'),
('rmdir', 'The Command Line', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/cLIJgSx.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/6slAO0a.png\">\r\n	<img src=\"https://i.imgur.com/tcYIQMO.png\" alt=\"An example of the rmdir command being ran.\">\r\n</picture>\r\n<p>\r\n	This command is similar to mkdir in options but has the opposite purpose.\r\n	 It removes empty directories, since rm will give the user an error if they try and use rm without the -r tag to remove a directory.\r\n	 There is one argument that could be useful to the user.\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ rmdir -p</pre>\r\n<p class=\"preText\">\r\n	Removes parent directories that are empty as well.\r\n	 The command \'rmdir folder/inside\' would remove the inside and folder directories, provided that they are both empty.\r\n</p>', 'mkdir', 'tcl_quiz'),
('samba', 'Network Services', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/CfveUOL.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/KzDuh03.png\">\r\n	<img src=\"https://i.imgur.com/RPqygSp.png\" alt=\"An example of the samba command being ran.\">\r\n</picture>\r\n<p>\r\n	Samba enables the user to do print and file sharing across different platforms.\r\n	It implements SMB/CIFS protocol.\r\n	It is useful in integrating UNIX environment and desktop into directory environments.\r\n	 \r\n</p>\r\n<p>\r\n	There are also some useful arguments that can be used with samba to make more sense of the results.\r\n	 The most useful are:\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ smbclient -L myhost</pre>\r\n<p class=\"preText\">\r\n	This command will list all available shares on myhost.\r\n	 The I flag is used when the name of the netbios does not match the name of tcp/ip host names.\r\n	 \r\n</p>\r\n\r\n<pre class=\"preBox\">user@hostname$ smbclient -L ftp -I</pre>\r\n<p class=\"preText\">\r\n	This command will give the user a view of available services on a server.\r\n	 The I flag is used when the name of the netbios does not match the name of tcp/ip host names.\r\n	 \r\n</p>\r\n<pre class=\"preBox\">user@hostname$ smbclient \'\\\\pc\\share\' \"\" -N -Tx myback.tar</pre>\r\n<p class=\"preText\">\r\n	This command restores myback.tar into share on pc.\r\n	 There will be no prompt for the user to type in a password.\r\n	 \r\n</p>\r\n\r\n<pre class=\"preBox\">user@hostname$ scp -p vk116@host.com:/home/vk116/documents /home/vk116/downloads/documents </pre>\r\n<p class=\"preText\">\r\n	This scp command will maintain and preserve the modification and access times.\r\n	It is a good command to understand the available space in your system.\r\n</p>', 'nfs', 'netservices_quiz'),
('scp', 'Network Services', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/3YKRfZF.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/1hiiNf7.png\">\r\n	<img src=\"https://i.imgur.com/rf3ZHbx.png\" alt=\"An example of the scp command being ran.\">\r\n</picture>\r\n<p>\r\n	The scp command stands for secure copy.\r\n	This command copies files over an encrypted and secure network connection.\r\n	This command is pretty similar to cp command.\r\n	 \r\n</p>\r\n<p>\r\n	There are also some useful arguments that can be used with scp to make more sense of the results.\r\n	 The most useful are:\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ scp -r vk116@host.com:/home/vk116/documents /home/vk116/downloads/documents </pre>\r\n<p class=\"preText\">\r\n	This scp command will copy all the files in the remote directory /home/vk116/documents on the server host.com to the local directory /home/vk116/downloads/documents.\r\n	 It will include all the sub directories and the files in it.\r\n	 \r\n</p>\r\n<pre class=\"preBox\">user@hostname$ scp -l 100 viggy@host.com:/home/vk116/viggy.zip  </pre>\r\n<p class=\"preText\">\r\n	This command transfers the remote file /home/vk116/viggy.zip on host.com as the user \"viggy\" into the local working directory.\r\n	It limits the transfer rate to 100 kilobytes per second.\r\n</p>\r\n\r\n<pre class=\"preBox\">user@hostname$ scp -p vk116@host.com:/home/vk116/documents /home/vk116/downloads/documents </pre>\r\n<p class=\"preText\">\r\n	This scp command will maintain and preserve the modification and access times.\r\n	It also preserves different modes from the original file.\r\n</p>', 'netservices_introduction', 'ssh'),
('ssh', 'Network Services', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/G4CQHPo.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/qGasck3.png\">\r\n	<img src=\"https://i.imgur.com/iDCbGB7.png\" alt=\"An example of the ssh command being ran.\">\r\n</picture>\r\n<p>\r\n	The ssh command is used to log into a remote host and execute commands in it.\r\n	This command is a must know for all UNIX beginners.\r\n	It is the most commanly used command to log into a remote server.\r\n	 \r\n</p>\r\n<p>\r\n	There are also some useful arguments that can be used with ssh to make more sense of the results.\r\n	 The most useful are:\r\n</p>\r\n<pre class=\"preBox\"> ssh -l username remote-server</pre>\r\n<p class=\"preText\">\r\n	This ssh command will login to a remote server .\r\n	 Once the command is executed,it prompts the user for a password.\r\n	 If the user is logging in for the first time, it will give out a message saying host key is not found and should type yes to continue.\r\n	 From the next time, the host key will be cached and you only will require to enter a password.\r\n	 \r\n</p>\r\n<pre class=\"preBox\"> ssh user@remote-host \"ls test\"  </pre>\r\n<p class=\"preText\">\r\n	This command will run the unix command \"ls\" on the remote server.\r\n	You can execute any unix command using the above format from your local host.\r\n</p>\r\n\r\n<pre class=\"preBox\">ssh -V </pre>\r\n<p class=\"preText\">\r\n	This ssh command displays the version of ssh.\r\n	It is used to check if there is a need in upgrade of the ssh installed on the unix system.\r\n</p>', 'scp', 'wget'),
('system_introduction', 'System Information', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/oXTrCcS.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/20445Wi.png\">\r\n	<img src=\"https://i.imgur.com/qVpyShk.png\" alt=\"A blank terminal window.\">\r\n</picture>\r\n<p>\r\n	 Commands that come under the System Information category usually helps the user find out about the processes and other system related information.\r\n	 These commands are really useful in determining what\'s going on in the system.\r\n	 You will find these commands useful if you come across any errors and want to find out what\'s going wrong.\r\n	 In this module, you are going to learn different UNIX commands to find out about System information in general.\r\n </p>', NULL, 'top'),
('tail', 'Files', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/UEfI6CA.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/GCZcQ9y.png\">\r\n	<img src=\"https://i.imgur.com/YvRm7qR.png\" alt=\"An example of the tail command being ran.\">\r\n</picture>\r\n<p>Tail is very similar in function to the head command. However, instead of printing the first 10 lines of a file, it prints the last 10 lines. These commands are often used in similar scenarios, and/or in conjunction with each other. They also share their one useful argument:</p>\r\n<pre class=\"preBox\">tail -n [number_of_lines]</pre>\r\n<p class=\"preText\">This changes the number of lines to read at the bottom of the file. For example, in a file with 7 lines \'tail -n 2\' will print the last 2 lines of the file.</p>', 'head', 'grep'),
('tar', 'Files', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/1H2GGHA.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/uhJcjfO.png\">\r\n	<img src=\"https://i.imgur.com/OTiP4Qy.png\" alt=\"An example of the tar command being ran.\">\r\n</picture>\r\n<p>The tar command stands for tape archive, which is a commonly used by professional of Unix system administrators to deal with backup of tape drives. The tar command is used to rip a collection of files and directories into a compressed archive file commonly known as tar, gzip and bzip. These are some of the useful tar commands:</p>\r\n<pre class=\"preBox\">tar -c</pre>\r\n<p class=\"preText\">This command creates a new archive file with .tar extension. This is the most basic flag of this command.</p>\r\n<pre class=\"preBox\">tar -v</pre>\r\n<p class=\"preText\">This flag will verbosely show the file progression of .tar file.</p>\r\n<pre class=\"preBox\">tar -f</pre>\r\n<p class=\"preText\">This command will mention the file name type of the archive file that the user wants to create.\r\n<pre class=\"preBox\">tar -t</pre>\r\n<p class=\"preText\">This will print out the contents of tar archive file mentioned by the user. It is a command which can be used as a diagnostic tool to find if any files are missing in the compressed archive file.</p>\r\n', 'zip', 'locate'),
('tcl_introduction', 'The Command Line', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/oXTrCcS.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/20445Wi.png\">\r\n	<img src=\"https://i.imgur.com/qVpyShk.png\" alt=\"A blank terminal window.\">\r\n</picture>\r\n<p>\r\n	The command line is where it all happens in Linux.\r\n	 Every Linux distribution contains the command line, and most likely everyone who uses Linux will use the command line.\r\n	 You might be wondering how you\'re going to navigate through a computer using just text!\r\n	 I mean, isn\'t that what the mouse and graphics were invented for?\r\n	 In this module, you are going to learn about how to efficiently navigate the UNIX command line, and do common tasks you would do with a mouse using just your keyboard and a terminal window.\r\n </p>', NULL, 'ls'),
('top', 'System Information', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/sxk6R4V.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/zTjpj2x.png\">\r\n	<img src=\"https://i.imgur.com/ep1PoxZ.png\" alt=\"An example of the top command being ran.\">\r\n</picture>\r\n<p>\r\n	This command is useful in allowing users to monitor system resource usage and processes.\r\n	 It is a very important tool that every system administrator should know.\r\n	 It is interactive and allows the user to go through the processes, kill a process,etc.\r\n	 \r\n</p>\r\n<p>\r\n	There are also some useful arguments that can be used with top to make more sense of the results.\r\n	 The most useful are:\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ top -b</pre>\r\n<p class=\"preText\">\r\n	Starts the top command in batch mode.\r\n	 It sends output from \"top\" to other programs or to a file.\r\n	 \r\n</p>\r\n<pre class=\"preBox\">user@hostname$ top -n</pre>\r\n<p class=\"preText\">\r\n	The n tag specifies the maximum number of iterations\r\n	 This command will run the maximum number of iterations/frames mentioned by the user before ending.\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ top -p\'pid\'</pre>\r\n<p class=\"preText\">\r\n	This will monitor only the process IDs specified by the user.\r\n	 If the pid value is zero then it will be treated as PID of the top most program.\r\n	 The \'p\' flag along with \'u\' and \'U\' are mutually exclusive.\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ top -s</pre>\r\n<p class=\"preText\">\r\n	It starts the top command with a secure mode.\r\n	 This is far better used in the system configuration files.\r\n</p>', 'system_introduction', 'w'),
('user_del_add', 'Permissions', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/2GUyJZC.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/W2tt67o.png\">\r\n	<img src=\"https://i.imgur.com/1B28fzz.png\" alt=\"An example of the ls command being ran.\">\r\n</picture>\r\n<p>The useradd and userdel command add and delete users on a Unix system. The user add command can also be used to assign specific groups to users and even specific shells like /bin/bash for a standard user, or even /bin/nologin for users you don\'t like.</p>\r\n\r\n<pre class=\"preBox\">user@hostname# useradd -m -g users -s /bin/bash [user]</pre>\r\n<p class=\"preText\">This command will create a user in the users group, give them a home directory, and give them the shell of bash.</p>\r\n\r\n<pre class=\"preBox\">user@hostname# userdel -r [user]</pre>\r\n<p class=\"preText\">This command will remove a user from the system including their home directory.</p>', 'group_del_add', 'permissions_quiz');
INSERT INTO `Pages` (`PageName`, `PageParent`, `Content`, `PrevPage`, `NextPage`) VALUES
('w', 'System Information', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/97iy0Ij.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/DnfpWC3.png\">\r\n	<img src=\"https://i.imgur.com/smiOAyY.png\" alt=\"An example of the w command being ran.\">\r\n</picture>\r\n<p>\r\n	w command displays the list of users who are logged into the server and their current activities.\r\n	 This command is pretty similar to who command but the w command displays more information about users logged into the system.\r\n	 \r\n	 \r\n</p>\r\n<p>\r\n	There are also some useful arguments that can be used with w to make more sense of the results.\r\n	 The most useful are:\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ w -s</pre>\r\n<p class=\"preText\">\r\n	It hides the login time or the PCPU times.\r\n	 This flag is useful when the user doesn\'t want a lot of information in the output.\r\n	 It helps the user in getting the main information without the unwanted information.\r\n	 \r\n</p>\r\n<pre class=\"preBox\">user@hostname$ w -u</pre>\r\n<p class=\"preText\">\r\n	This flag is used when only the statistics of a specific username are desired. It will not display any other users currently logged in to the system.\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ w -f</pre>\r\n<p class=\"preText\">\r\n	It will show the remote hostname field.\r\n	By default, the remote hostname field will not be printed without the \'f\' flag.\r\n</p>', 'top', 'du'),
('wget', 'Network Services', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/2xTG0J9.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/fsl4fwO.png\">\r\n	<img src=\"https://i.imgur.com/JOBLipO.png\" alt=\"An example of the wget command being ran.\">\r\n</picture>\r\n<p>\r\n	The wget command stands for web get.\r\n	This command downloads files over a desired network of user\'s choice.\r\n	It supports HTTP/HTTPS and FTP protocols.\r\n	It also supports retrieval through HTTP proxies\r\n	 \r\n</p>\r\n<p>\r\n	There are also some useful arguments that can be used with wget to make more sense of the results.\r\n	 The most useful are:\r\n</p>\r\n<pre class=\"preBox\">user@hostname$ wget -b http://www.123.com/page.php</pre>\r\n<p class=\"preText\">\r\n	This wget command will ownload the file in the background.\r\n	 It is good for multitasking as you can work on something else in the foreground while a file is being downloaded in the background.\r\n	 \r\n</p>\r\n<pre class=\"preBox\">user@hostname$ wget -c http://www.123.com/page.exp.zip </pre>\r\n<p class=\"preText\">\r\n	This command will resume an already partially downloaded file.\r\n	It is useful command to download files that were interrupted because of other factors.\r\n</p>\r\n\r\n<pre class=\"preBox\">user@hostname$ wget -h http://www.123.com/page.php </pre>\r\n<p class=\"preText\">\r\n	This wget command prints out help messages with every possible options of the command that is available with wget command line options.\r\n	It serves as a good manual for every possible wget commands.\r\n</p>', 'ssh', 'ftp'),
('zip', 'Files', '<picture class=\"titlePicture\">\r\n	<source media=\"(max-width: 450px)\" srcset=\"https://i.imgur.com/pg92JXj.png\">\r\n	<source media=\"(max-width: 1024px)\" srcset=\"https://i.imgur.com/YAXOMRe.png\">\r\n	<img src=\"https://i.imgur.com/xqiq6cY.png\" alt=\"An example of the zip command being ran.\">\r\n</picture>\r\n<p>Zipping files on command line is a bit harder than zipping files in a GUI, but it is not difficult to learn how to do it without pretty graphics. After all, zipping files cannot get too complicated. The structure of the command is as follows:</p>\r\n<pre class=\"preBox\">zip archive.zip archive_folder</pre>\r\n<p>This will place the folder archive_folder in a zip archive named archive.zip.</p>', 'more', 'tar');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `Comments`
--
ALTER TABLE `Comments`
  ADD PRIMARY KEY (`ID`);

--
-- Indexes for table `Pages`
--
ALTER TABLE `Pages`
  ADD PRIMARY KEY (`PageName`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `Comments`
--
ALTER TABLE `Comments`
  MODIFY `ID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=28;COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
